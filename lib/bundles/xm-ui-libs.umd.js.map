{"version":3,"file":"xm-ui-libs.umd.js","sources":["../../projects/xm-ui-libs/src/components/test-ui/test.component.ts","../../projects/xm-ui-libs/src/components/test-ui/test-ui.module.ts","../../projects/xm-ui-libs/src/directives/icon/icon.directive.ts","../../projects/xm-ui-libs/src/components/rate/rate-item/rate-item.component.ts","../../projects/xm-ui-libs/src/components/rate/rate-item/rate-item.component.html","../../projects/xm-ui-libs/src/components/rate/rate.component.ts","../../projects/xm-ui-libs/src/components/rate/rate.component.html","../../projects/xm-ui-libs/src/directives/xm-btn.directive.ts","../../projects/xm-ui-libs/src/directives/str-tpl-outlet.directive.ts","../../projects/xm-ui-libs/src/directives/index.ts","../../projects/xm-ui-libs/src/components/rate/rate.module.ts","../../projects/xm-ui-libs/src/index.ts","../../projects/xm-ui-libs/src/xm-ui-libs.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'xm-test',\n  template: `\n    <p>\n      xm-ui-libs test works !!!!!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { TestComponent } from './test.component';\n\n\n\n@NgModule({\n  declarations: [\n    TestComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    TestComponent\n  ]\n})\nexport class TestUiModule { }\n","import {Directive, ElementRef, Input, OnChanges, Renderer2, SimpleChanges} from '@angular/core';\nimport {IconType} from './type';\nimport {TypeWithUndefined} from \"../../utils\";\n\n@Directive({\n  selector: 'i[xmIcon]',\n  host: {\n    '[class.iconfont]': 'true'\n  }\n})\nexport class IconDirective implements OnChanges {\n  // @HostBinding('class.iconfont') readonly hostCls = true;\n  @Input('xmIcon') type: TypeWithUndefined<IconType>;\n  constructor(private el: ElementRef, private rd2: Renderer2) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { type } = changes;\n    // console.log('type change', type);\n    if (type.previousValue) {\n      this.rd2.removeClass(this.el.nativeElement, 'icon-' + type.previousValue);\n    }\n    this.rd2.addClass(this.el.nativeElement, 'icon-' + type.currentValue);\n  }\n}\n","import {Component, OnInit, ChangeDetectionStrategy, Output, EventEmitter, Input, TemplateRef} from '@angular/core';\nimport {TypeWithUndefined} from \"../../../utils\";\n\n@Component({\n  selector: 'xm-rate-item',\n  templateUrl: './rate-item.component.html',\n  styleUrls: ['./rate-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RateItemComponent implements OnInit {\n  @Input() tpl: TypeWithUndefined<TemplateRef<void>>;\n  @Input() rateItemCls = 'xm-rate-item';\n  @Output() private itemHover = new EventEmitter<boolean>();\n  @Output() private itemClick = new EventEmitter<boolean>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  hoverRate(isHalf: boolean): void {\n    this.itemHover.emit(isHalf);\n  }\n\n  clickRate(isHalf: boolean): void {\n    this.itemClick.emit(isHalf);\n  }\n}\n","<div [class]=\"rateItemCls || 'xm-rate-item'\">\n  <div class=\"star-wrap back\" (click)=\"clickRate(false)\" (mouseenter)=\"hoverRate(false)\">\n    <ng-template [ngTemplateOutlet]=\"tpl || defaultTpl\"></ng-template>\n  </div>\n  <div class=\"star-wrap front\" (click)=\"clickRate(true)\" (mouseenter)=\"hoverRate(true)\">\n    <ng-template [ngTemplateOutlet]=\"tpl || defaultTpl\"></ng-template>\n  </div>\n  <ng-template #defaultTpl>\n    <i class=\"icon\" xmIcon=\"Star\"></i>\n  </ng-template>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output, TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {TypeWithUndefined} from \"../../utils\";\n\n@Component({\n  selector: 'xm-rate',\n  templateUrl: './rate.component.html',\n  styleUrls: ['./rate.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RateComponent),\n      multi: true\n    }\n  ]\n})\nexport class RateComponent implements OnInit, ControlValueAccessor {\n  @Input() count = 5;\n  @Input() tpl: TypeWithUndefined<TemplateRef<void>>;\n  private readonly  = false;\n  starArray: number[] = [];\n  private hoverValue = 0;\n  private actualValue = 0;\n  private hasHalf = false;\n  rateItemStyles: string[] = [];\n  @Output() changed = new EventEmitter<number>();\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.updateStarArray();\n  }\n\n  rateHover(isHalf: boolean, index: number): void {\n    if (this.readonly || (this.hoverValue === index + 1 && isHalf === this.hasHalf)) {\n      return;\n    }\n    this.hoverValue = index + 1;\n    this.hasHalf = isHalf;\n    // console.log('hoverValue', this.hoverValue);\n    this.updateStarStyle();\n  }\n\n  rateClick(isHalf: boolean, index: number): void {\n    if (this.readonly) {\n      return;\n    }\n    this.hoverValue = index + 1;\n    this.hasHalf = isHalf;\n    this.setActualValue(isHalf ? index + 0.5 : this.hoverValue);\n    this.updateStarStyle();\n  }\n\n  private setActualValue(value: number): void {\n    if (this.actualValue !== value) {\n      this.actualValue = value;\n      this.onChange(value);\n      this.changed.emit(value);\n    }\n  }\n  rateLeave(): void {\n    this.hasHalf = !Number.isInteger(this.actualValue);\n    this.hoverValue = Math.ceil(this.actualValue);\n    this.updateStarStyle();\n  }\n\n  private updateStarArray(): void {\n    this.starArray = Array(this.count).fill(0).map((item, index) => index);\n    // console.log('starArray', this.starArray);\n  }\n\n  private updateStarStyle(): void {\n    this.rateItemStyles = this.starArray.map(index => {\n      const base = 'xm-rate-item';\n      const value = index + 1;\n      let cls = '';\n      if (value < this.hoverValue || (!this.hasHalf && value === this.hoverValue)) {\n        cls += base + '-full';\n      } else if (this.hasHalf && value === this.hoverValue) {\n        cls += base + '-half';\n      }\n      const midCls = this.readonly ? ' xm-rate-item-readonly ' : ' ';\n      return base + midCls + cls;\n    });\n  }\n\n  onChange: (value: number) => void = () => {};\n  onTouched: () => void = () => {};\n  writeValue(value: number): void {\n    // console.log('writeValue', value);\n    if (value) {\n      this.actualValue = value;\n      this.rateLeave();\n      this.cdr.markForCheck();\n    }\n  }\n  registerOnChange(fn: (value: number) => void): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.readonly = isDisabled;\n  }\n}\n","<div class=\"xm-rate-wrap\" (mouseleave)=\"rateLeave()\">\n  <xm-rate-item\n    *ngFor=\"let item of starArray; index as i\"\n    [tpl]=\"tpl\"\n    [rateItemCls]=\"rateItemStyles[i]\"\n    (itemClick)=\"rateClick($event, i)\"\n    (itemHover)=\"rateHover($event, i)\">\n  </xm-rate-item>\n</div>\n","import {Directive, HostBinding, Input} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'a[xmBtn], button[xmBtn]',\r\n  host: {\r\n    '[class.xm-btn]': 'true'\r\n  }\r\n})\r\nexport class BtnDirective {\r\n  @Input() @HostBinding('class.xm-btn-block') xmBlock = false;\r\n  @Input() @HostBinding('class.xm-btn-circle') xmCircle = false;\r\n  constructor() { }\r\n\r\n}\r\n","import {Directive, Input, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {TypeWithUndefined} from \"../utils\";\r\n\r\n@Directive({\r\n  selector: '[xmStrTplOutlet]'\r\n})\r\nexport class StrTplOutletDirective<T> implements OnChanges {\r\n  @Input() xmStrTplOutlet: TemplateRef<T> | string = '';\r\n  @Input() xmStrTplOutletContext: TypeWithUndefined<T>;\r\n  constructor(private viewContainer: ViewContainerRef, private templateRef: TemplateRef<T>) { }\r\n  ngOnChanges({ xmStrTplOutlet }: SimpleChanges) {\r\n    if (xmStrTplOutlet) {\r\n      this.viewContainer.clear();\r\n      const template = (this.xmStrTplOutlet instanceof TemplateRef) ? this.xmStrTplOutlet : this.templateRef;\r\n      this.viewContainer.createEmbeddedView(template, this.xmStrTplOutletContext);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { IconDirective } from './icon/icon.directive';\nimport {BtnDirective} from \"./xm-btn.directive\";\nimport {StrTplOutletDirective} from \"./str-tpl-outlet.directive\";\n\nconst list = [IconDirective, BtnDirective, StrTplOutletDirective];\n\n@NgModule({\n  declarations: list,\n  exports: list\n})\nclass DirectivesModule { }\n\nexport { IconDirective, BtnDirective, StrTplOutletDirective, DirectivesModule }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RateItemComponent} from './rate-item/rate-item.component';\nimport {DirectivesModule} from '../../directives';\nimport { RateComponent } from './rate.component';\n\n\n\n@NgModule({\n  declarations: [RateItemComponent, RateComponent],\n  imports: [\n    CommonModule,\n    DirectivesModule\n  ],\n  exports: [RateComponent]\n})\nexport class RateModule { }\n","/*\n * 库的入口文件\n */\n\nexport * from './components/test-ui';\nexport * from './components/rate';\nexport * from './directives';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Component","NgModule","Directive","Input","EventEmitter","ChangeDetectionStrategy","Output","NG_VALUE_ACCESSOR","forwardRef","ViewEncapsulation","HostBinding","TemplateRef","CommonModule"],"mappings":"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"}